@{
    Page.Title = "Dashboard";
    ViewBag.Title = "Dashboard";
    ViewBag.Message = "Welcome to your dashboard. This page shows the results from the previous round.";
}

@section scripts{
    @Styles.Render("~/Content/index");
    @Scripts.Render("~/bundles/dashboard");
    <link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <link rel="stylesheet" type="text/css" href="~/Content/Jquery.tag.css" />
    <script type="text/javascript" src="~/Scripts/dashboard-timetable.js"></script>
}

<hgroup class="title">
    <h1>@ViewBag.Title</h1>
</hgroup>
<hgroup class="title">
    <h2>@ViewBag.Message</h2>
</hgroup>

<!-- Currently Active Rounds card -->
<div>
 <!--if request.round =current round, output that request-->
    <h3>Currently Active Rounds</h3>
    <div>These are your currently active rounds, which are still pending. They will either be denied or approved.</div>
    <!-- Actual table of active rounds -->
    <!--Check if there are actually any rounds active-->
    <!-- For each round in the activeRounds array passed to this page, output a row to the table for it -->
    <table align="center" width="900">
        <tr>
            <td align="center" style="font-weight:bold" width="20%">
                <!--Sem 1 or 2-->
                Semester
            </td>
            <td align="center" style="font-weight:bold" width="20%">
                Round Number
            </td>
            <td align="center" style="font-weight:bold" width="20%">
                Requests Made
            </td>
            <td align="center" style="font-weight:bold" width="20%">
                Days Remaining
            </td>
            <td align="center" style="font-weight:bold" width="20%">
                Actions
            </td>
        </tr>
        @{
            var db = Database.Open("DBCon");
            DateTime currentDate = DateTime.Today;
            DateTime endDate = new DateTime(2016, 12, 12);
            var roundSelect = "SELECT Semester, Round FROM Request JOIN Booking ON Request.ReqID=Booking.ReqID WHERE Booking.Status='Pending'";
            int count = 0;
            var noOfDays = (endDate - currentDate).TotalDays;

            //var date = "SELECT EndDate FROM Round JOIN Request ON Round.CurrentRound = Request.Round";// JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Denied'";
            /*foreach (var d in db.Query(date))
            {
                days.Add(d);
            }
            var day = days.ToArray();*/

            foreach (var round in db.Query(roundSelect))
            {
                count += 1;
                <tr>
                    <td align="center">@round.Semester</td>
                    <td align="center">@round.Round</td>
                    <td align="center">@count</td>
                    <td align="center">@noOfDays day(s)</td>
                    <td align="center">
                    <!--Write a procedure for this-->
                        <button type="submit" id="request-button">View All Previous Requests</button>
                    </td>
                </tr>
             }
        }

        <!-- If no rounds are active, say so; instead of just showing an empty table -->

        <!--<tr>
            <td align="center"width="75%">No rounds are currently accepting requests</td>
            <td align="center" width="25%">
                <button type="submit" id="request-button">View All Previous Requests</button>
            </td>
        </tr>-->

        <tr>
            <td align="center">No rounds are currently accepting requests</td>
            <td align="center"></td>
            <td align="center"></td>
            <td align="center"></td>
            <td align="center"><a href="requests/">View All Previous Requests</a></td>
       <!-- <td align="center"> <button type="submit" id="request-button">View Requests</button></td>
                    <!-- action="requests/" method="post">-->
                 <!--   <input type="hidden" name="filterSemester" /> <!--value="semester id"/>-->  
                 <!--   <input type="hidden" name="filterRound" /> <!--value="round id/>-->
        </tr>

    </table>
</div>
<!-- End currently active rounds card -->
<!-- Previous round results section -->

<br />

<div id="results">
    @{
        var total = db.Query("SELECT COUNT(ReqID) AS Num FROM Booking").Select(r =>r.Num);
        var totals = string.Join(",", total);
        var denied = db.Query("SELECT ReqID FROM Booking WHERE Status = 'Denied'").Count();
        var pending = db.Query("SELECT ReqID FROM Booking WHERE Status = 'Pending'").Count();
        var approved = db.Query("SELECT ReqID FROM Booking WHERE Status = 'Approved'").Count();
        
        
    }

    <script type="text/javascript">
        var denied = "<%denied%>";
        var pending = "<%pending%>";
        var approved = "<%approved%>";

        function releaseRequest(reqID, row, table) {
            console.log(reqID);
            $.ajax({
                type: "POST",
                url: "Timetable/releaseRequest",
                data: {
                    reqID: reqID
                },
                success: function () {
                    document.getElementById(table).deleteRow(row + 1);
                }
            })
        }

        function getDay(day) {
            switch (day){
                case 0 : return "Monday";
                    break;
                case 1 : return "Tuesday";
                    break;
                case 2 : return "Wednesday";
                    break;
                case 3 : return "Thursday";
                    break;
                case 4 : return "Friday";
                    break;
            }
        }

        function getTimetable() {
            var data = '<div id="container"><div id="module-code" value=""></div><div id="module-name" value=""></div>' +
                '<input type="hidden" name="room-list" id="room-list" value="">' +
                '<div id="weeks-selected">' +
                        '</div>'+
                        '<div id="week-chosen"></div>'+
                        '<button class="btn btn-primary waves-effect" id="range-selector" style="height:35px; width:150px">Choose range</button>' +
                        '<div class="weekRange"></div>'+
                        '<label><input type="checkbox" id="view-period" name="view-period">View in periods</label>' +
                    '<section id="timetable">'+
                        '<div id="weeks-range" class="horizontal-range">'+
                            '<div id="general">'+
                                'General'+
                            '</div>'+
                        '</div>'+
                        '<div id="timetable-holder"></div>'+
                        '<br />'+
                        '<div><button class="btn btn-primary waves-effect" id="submit-choices" style="width:300px">Submit</button></div>'+
                    '</section></div>';
            return data;
        }

        $(document).ready(function () {
            $("#request-circle").circliful({
                animationStep: 5,
                foregroundColor: "#008000",
                foregroundBorderWidth: 10,
                backgroundBorderWidth: 15,
                percent: (@approved/@totals) * 100,
                text: "Approved"
            });
            
            $("#denied-info").click(function(){
                $('html, body').animate({
                    scrollTop: $("#denied").offset().top
                }, 1400);
            });

            $("#pending-info").click(function(){
                $('html, body').animate({
                    scrollTop: $("#pending-table").offset().top
                }, 1300);
            });

            $("#approved-info").click(function(){
                $('html, body').animate({
                    scrollTop: $("#approved-table").offset().top
                }, 1200);
            });

            $(".nav-top").click(function() {
                $('html, body').animate({
                    scrollTop: $("body").offset().top
                }, 1000);
            })

            $("#request-button").magnificPopup({
                type: "ajax",
                ajax: {
                    settings :{
                        type: "POST",
                        data:{
                            dept : 'EC'
                        },
                        url: "Timetable/getAllRequests"
                    }
                },
                callbacks: {
                    parseAjax: function(response) {
                        var data = "<table id='prev-req'>"+
                                    "<tr><th>Module Code</th><th>Period</th><th>Day</th><th>Weeks</th><th>Semester</th><th>Year</th>";
                        for(var i = 0; i < response.data.length; i++) {
                            data += "<tr>";
                            data += "<td>"+response.data[i].ModCode+"</td>";
                            data += "<td>"+(response.data[i].Period + 1)+"</td>";
                            data += "<td>"+getDay(response.data[i].Day)+"</td>";
                            data += "<td>"+(response.data[i].WeekStart + 1)+ " - " + (response.data[i].WeekEnd + 1) + "</td>";
                            data += "<td>"+response.data[i].Semester+"</td>";
                            data += "<td>"+response.data[i].Year+"</td>";
                            data+="</tr>";
                        }
                        data+= "</table>";
                        response.data = data;
                    }
                }
            });

            $(".new-request").magnificPopup({
                closeOnContentClick: false,
                closeOnBgClick: false,
                items: {
                    src: getTimetable(),
                    type: "inline"
                }

            });

            $(".new-request").click(function(){
                var data = $.parseJSON($(this).attr("data-request"));
                console.log(data.rooms);
                $("#module-code").attr('value', data.modcode);
                $("#module-code").text(data.modcode);
                $("#module-name").attr('value', data.modname);
                $("#module-name").text(data.modname);
                $("#room-list").attr('value', data.rooms);
                var timetable = new Timetable(1);
                var timetableRenderer = $("#timetable-holder").timetableRenderer(timetable, { type: "general" });
                selectWeekRange(timetableRenderer);
                initliaseSlider();
                initiliaseSubmit(timetableRenderer);
                initiliaseRange(timetableRenderer);
                displayUpdatedTimetable();
            });

        });
    </script>

    <h3>Results</h3>
    <div>These are your overall results.</div>
    <!--For every item in 'previousRounds' as 'previousRound', do the following... -->
    <!-- Show all results -->
    <table align="center" width="900" id="request-info-table">
        <tr>
            <td align="center" style="font-weight:bold" class="cell-info">
                <div class="dashboard-dial-bg" id="dashboard-circle">
                    <div id="request-circle"></div>
                </div>
                <div class="dashboard-dial-bg-bottom"><p>Overview</p></div>
            </td>
            <!-- Start request counts -->
            <!-- Requests made box -->
            <td align="center" style="font-weight:bold" class="cell-info">
                <div class="dashboard-dial-bg">
                    <div id="total" class="request-info"><p>@totals</p></div>
                </div>
                <div class="dashboard-dial-bg-bottom"><p>Requests Made</p></div>
            </td>

            <!-- Requests denied box -->
            <td align="center" style="font-weight:bold" class="cell-info">
                <div class="dashboard-dial-bg">
                    <div id="denial" class="request-info"><p>@denied</p></div>
                    <div id="denied" data-percent="16.67" data-title="Requests denied"></div>
                    <!--amount of previous requests denied-->
                </div>
                <div class="dashboard-dial-bg-bottom" id="denied-info"><p>Denied</p></div>
            </td>

            <!-- Requests altered box -->
            <td align="center" style="font-weight:bold" class="cell-info">
                <div class="dashboard-dial-bg">
                    <div id="alters" class="request-info"><p>@pending</p></div>
                    <div id="altered" data-percent="33.34" data-title="Requests pending"></div>
                    <!--amount of previous requests altered-->
                </div>
                <div class="dashboard-dial-bg-bottom" id="pending-info"><p>Pending</p></div>
            </td>

            <!-- Requests approved box -->
            <td align="center" style="font-weight:bold" class="cell-info">
                <div class="dashboard-dial-bg">
                    <div id="approval" class="request-info"><p>@approved</p></div>
                    <div id="approved" data-percent="50" data-title="Requests approved"></div>
                    <!--amount of previous requests approved-->
                </div>
                <div class="dashboard-dial-bg-bottom" id="approved-info"><p>Approved</p></div>
            </td>
            <!-- End request counts -->
        </tr>
    </table>
</div>

<!-- Denied requests section -->
<br />

<div>
    <!-- Card heading -->
    <h3>Denied</h3>
    <div>These requests were completely denied. You can make a new request from the actions menu.</div>
    <!-- Put the table in a scrollable wrapper so it can be scrolled horizontally without overflowing the viewport on phones -->    
    <table align="center" width="900" id="denied">

    <!-- Column headings -->
    <tr>
        <td align="center" style="font-weight:bold" width="25%">Module</td>
        <td align="center" style="font-weight:bold" width="25%">Time</td>
        <td align="center" style="font-weight:bold" width="25%">Requested</td>
        <!--<td align="center" style="font-weight:bold" width="20%">Date</td>-->
        <td align="center" style="font-weight:bold" width="25%">Actions</td>
    </tr>
    <!--End column headings-->
    @{

        var modules = db.Query("SELECT Modules.ModName FROM Modules JOIN Request ON Modules.ModCode = Request.ModCode " +
            "JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Denied'");
        var time = db.Query("SELECT Request.ReqID, Request.ModCode, Request.Day, Request.Period, Request.WeekStart, Request.WeekEnd FROM Request " + 
            "JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Denied'");
            
        var requested = db.Query("SELECT RoomRequest.RoomCode FROM RoomRequest" +
            " JOIN Booking ON RoomRequest.ReqID = Booking.ReqID WHERE Booking.Status = 'Denied'");

        for (int i = 0; i < @denied; i++)  
        {
            <tr>
                <td align="center">     
                    @{
                        @time.ElementAt(i).ModCode; <br />
                        @modules.ElementAt(i).ModName;
                    }
                </td>
                <td align="center">
                    <div class="time">
                    @{
                        int day = time.ElementAt(i).Day;
                        switch (day)
                        {
                            case 0: @:Monday
                            break;
                            case 1: @:Tuesday
                            break;
                            case 2: @:Wednesday
                            break;
                            case 3: @:Thursday
                            break;
                            case 4: @:Friday
                            break;
                        }
                        
                     }
                    - Period 
                    @{
                        @Html.Raw(@time.ElementAt(i).Period + 1);
                    }
                    </div>
                    <div class="weeks">
                        Week
                        @{
                            @Html.Raw(@time.ElementAt(i).WeekStart + 1);
}
                        - Week
                        @{
                            @Html.Raw(@time.ElementAt(i).WeekEnd + 1);
}
                    </div>
                </td>
                <td align="center">
                    @{
                        var rooms = db.Query("SELECT RoomCode FROM RoomRequest JOIN Booking ON RoomRequest.ReqID = Booking.ReqID WHERE Booking.Status = 'Denied' AND RoomRequest.ReqID = (SELECT ReqID FROM Request WHERE ReqID = " + @time.ElementAt(i).reqID + ")");
                        var newRooms = new List<string>();
                        string obj = "['']";
                        foreach(var room in rooms)
                        {
                            @room[0];
                            string curRoom = @rooms[0][0];
                            newRooms.Add(curRoom);
                        }
                        if (newRooms.Count > 0)
                        {
                            obj = string.Join(",", newRooms.ToArray());
                        }
}
                 </td>
                <!--need to write functions for all 3 in index.js-->
                  <td align='center'>
                      <button class="new-request" data-request='{"modname": "@modules.ElementAt(i).ModName" , "modcode": "@time.ElementAt(i).ModCode", "rooms" : "@obj"}'>Make New Request</button>
                  </td>
             </tr>
        }
    }

    </table>
    <div class="nav-top"><u>Back to top &#x2934;</u></div>
</div>

<!-- Add a row to the table, for every request in this round's requests array that has the status "3" (rejected) -->
<br />
<div>
    <h3>Pending</h3>
    <div>These requests are pending approval or denial. If you don't need a request for any reason you can delete/release it from the actions menu.</div>
    <table align="center" width="900" id="pending-table">
        <!-- end Denied requests section -->
        <!-- Same as denied section but for changed ones -->
        <tr>
            <td align="center" style="font-weight:bold" width="20%">Module</td>
            <td align="center" style="font-weight:bold" width="20%">Time</td>
            <td align="center" style="font-weight:bold" width="20%">Requested</td>
            <!--td align="center" style="font-weight:bold" width="20%">Assigned</td-->
            <!--<td align="center" style="font-weight:bold" width="20%">Date</td>-->
            <td align="center" style="font-weight:bold" width="20%">Actions</td>
        </tr>

        @{
            var pendingModules = db.Query("SELECT Modules.ModName FROM Modules JOIN Request ON Modules.ModCode = Request.ModCode JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Pending'");
            var pendingTimes = db.Query("SELECT Request.ReqID, Request.ModCode, Request.Day, Request.Period, Request.WeekStart, Request.WeekEnd FROM Request JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Pending'");

            for (int j = 0; j < @pending; j++ )
            {
                <tr>
                    <td align="center">
                        @{
                            @pendingTimes.ElementAt(j).ModCode; <br/>
                            @pendingModules.ElementAt(j).ModName;
                        }
                    </td>
                    <td align="center">
                        <div class="time">
                            @{
                                                                int day = pendingTimes.ElementAt(j).Day;
                                                                switch (day)
                                                                {
                                                                    case 0: @:Monday
                            break;
                                                                    case 1: @:Tuesday
                            break;
                                                                    case 2: @:Wednesday
                            break;
                                                                    case 3: @:Thursday
                            break;
                                                                    case 4: @:Friday
                            break;
                                                                }

                            }
                            - Period
                            @{
                                @Html.Raw(@pendingTimes.ElementAt(j).Period + 1);
                            }
                            </div>
                        <div class="weeks">
                            Week
                            @{
                                @Html.Raw(@pendingTimes.ElementAt(j).WeekStart + 1);
}
                            - Week
                            @{
                                @Html.Raw(@pendingTimes.ElementAt(j).WeekEnd + 1);
}
                            </div>
</td>
                    <td align="center">
                        @{
                            var pendingRooms = db.Query("SELECT Assigned.RoomCode FROM Assigned JOIN Booking ON Assigned.ReqID = Booking.ReqID WHERE Booking.Status = 'Pending' AND Assigned.ReqID = (SELECT ReqID FROM Request WHERE ReqID = " + @pendingTimes.ElementAt(j).reqID + ")");
                            var rooms = new List<string>();
                            string obj = "['']";
                            foreach (var pendingRoom in pendingRooms)
                            {
                                @pendingRoom[0];
                                string curRoom = @pendingRooms[0][0];
                                rooms.Add(curRoom);
                            }
                        if (rooms.Count > 0)
                        {
                            obj = string.Join(",", rooms.ToArray());
                        }
                        }
                    </td>
                    <!--need to write function for in index.js-->
                    <td align='center'>
                        <button class="new-request" data-request='{"modname": "@pendingModules.ElementAt(j).ModName" , "modcode": "@pendingTimes.ElementAt(j).ModCode", "rooms" : "@obj"}'>Add another request</button>
                        <button onclick="releaseRequest(@pendingTimes.ElementAt(j).ReqID, @j, 'pending-table')">Cancel</button>
                    </td>
                </tr>
            }
            }
    </table>
    <div class="nav-top"><u>Back to top &#x2934;</u></div>
</div>

<!-- Same as denied and changed section but for approved ones -->
<br />
<div>
    <h3>Approved</h3>
    <div>These requests have been approved. If you don't need a request for any reason you can delete/release it from the actions menu.</div>
    <table align="center" width="900" id="approved-table">
        <tr>
            <td align="center" style="font-weight:bold" width="20%">Module</td>
            <td align="center" style="font-weight:bold" width="20%">Time</td>
            <td align="center" style="font-weight:bold" width="20%">Requested</td>
            <td align="center" style="font-weight:bold" width="20%">Assigned</td>
            <!--<td align="center" style="font-weight:bold" width="16.6%">Date</td>-->
            <td align="center" style="font-weight:bold" width="20%">Actions</td>
        </tr>
        @{
                var approvedModules = db.Query("SELECT Modules.ModName FROM Modules JOIN Request ON Modules.ModCode = Request.ModCode JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Approved'");
                var approvedTimes = db.Query("SELECT Request.ReqID, Request.ModCode, Request.Day, Request.Period, Request.WeekStart, Request.WeekEnd FROM Request JOIN Booking ON Request.ReqID = Booking.ReqID WHERE Booking.Status = 'Approved'");

                for (int k = 0; k < @approved; k++ )
                {
                <tr>
                    <td align="center">
                        @{
                            @approvedTimes.ElementAt(k).ModCode; <br />
                            @approvedModules.ElementAt(k).ModName;
                        }
                    </td>
                    <td align="center">
                        <div class="time>
                            @{
                                                                 int day = approvedTimes.ElementAt(k).Day;
                                                                 switch (day)
                                                                 {
                                                                     case 0: @:Monday
                            break;
                                                                     case 1: @:Tuesday
                            break;
                                                                     case 2: @:Wednesday
                            break;
                                                                     case 3: @:Thursday
                            break;
                                                                     case 4: @:Friday
                            break;
                                                                 }

                            }
                            - Period
                            @{
                                @Html.Raw(@approvedTimes.ElementAt(k).Period + 1);
                            }
                            </div>
                        <div class="weeks">
                            Week
                            @{
                                @Html.Raw(@approvedTimes.ElementAt(k).WeekStart + 1);
                            }
                            - Week
                            @{
                                @Html.Raw(@approvedTimes.ElementAt(k).WeekEnd + 1);
}
                            </div>
</td>
                    <td align="center">
                        @{
                            var approvedRooms = db.Query("SELECT RoomRequest.RoomCode FROM RoomRequest JOIN Booking ON RoomRequest.ReqID = Booking.ReqID WHERE Booking.Status = 'Approved'AND Booking.ReqID = (SELECT ReqID FROM Request WHERE ReqID = "+@approvedTimes.ElementAt(k).reqID+")");
                            foreach(var approvedRoom in approvedRooms)
                            {
                                @approvedRoom.RoomCode;
                            }
                        }
                    </td>
                    <td align="center">
                        @{
                            var assignedRooms = db.Query("SELECT Assigned.RoomCode FROM Assigned JOIN Booking ON Assigned.ReqID = Booking.ReqID WHERE Booking.Status = 'Approved' AND Assigned.ReqID = (SELECT ReqID FROM Request WHERE ReqID = "+@approvedTimes.ElementAt(k).reqID+")");
                            var rooms = new List<string>();
                            string obj ="['']";
                            foreach (var assignedRoom in assignedRooms)
                            {
                                @assignedRooms[0].RoomCode;
                                string curRoom = @assignedRooms[0][0];
                                rooms.Add(curRoom);
                            }
                            if (rooms.Count > 0)
                            {
                                obj = string.Join(",", rooms.ToArray());
                            }
                        }
                    </td>
                    <!--need to write function for in index.js-->
                    <td align='center'>
                        <button class="new-request" data-request='{"modname": "@approvedModules.ElementAt(k).ModName" , "modcode": "@approvedTimes.ElementAt(k).ModCode", "rooms" : "@obj"}'>Add another request</button>
                        <button onclick="releaseRequest(@approvedTimes.ElementAt(k).ReqID, @k, 'approved-table')">Release</button>
                    </td>
                </tr>
                }
            }        
    </table>
    <div class="nav-top"><u>Back to top &#x2934;</u></div>
</div>
